# The Device protocol is not a real routing protocol. It does not generate any
# routes and it only serves as a module for getting information about network
# interfaces from the kernel. It is necessary in almost any configuration.
protocol device {
scan time 10;
}

# The direct protocol is not a real routing protocol. It automatically generates
# direct routes to all network interfaces. Can exist in as many instances as you
# wish if you want to populate multiple routing tables with direct routes.
protocol direct {
	#disabled;		# Disable by default
	ipv4;			# Connect to default IPv4 table
	ipv6;			# ... and to default IPv6 table
}

# The Kernel protocol is not a real routing protocol. Instead of communicating
# with other routers in the network, it performs synchronization of BIRD
# routing tables with the OS kernel. One instance per table.
protocol kernel {
	ipv4 {			# Connect protocol to IPv4 table by channel
	      #table master4;	# Default IPv4 table is master4
	      import all;	# Import to table, default is import all
	      export all;	# Export to protocol. default is export none
	};
	learn;			# Learn alien routes from the kernel
	scan time 10;
#	kernel table 10;	# Kernel table to synchronize with (default: main)
}

# Another instance for IPv6, skipping default options
protocol kernel {
	ipv6 { export all; };
}


# RIP example, both RIP and RIPng are supported
protocol rip {
	ipv4 {
		# Export direct, static routes and ones from RIP itself
		import all;
		export all;
	};
	interface "r3-eth*" {
	  	update time 10;			# Default period is 30
		timeout time 60;		# Default timeout is 180
		authentication none;
		#authentication cryptographic;	# No authentication by default
		#password "hello" { algorithm hmac sha256; }; # Default is MD5
	};
}